name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  verify:
    name: Verify package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

      - name: Build
        run: npm run build

      - name: Pack artifact
        id: pack
        run: |
          npm pack --json > pack-result.json
          cat pack-result.json
          echo "filename=$(jq -r '.[0].filename' pack-result.json)" >> "$GITHUB_OUTPUT"

      - name: Upload tarball artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm-tarball
          path: ${{ steps.pack.outputs.filename }}

  publish:
    name: Publish
    needs: verify
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20 (npm registry)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to npm registry
        if: ${{ secrets.NPM_TOKEN != '' }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to GitHub Packages
        run: |
          npm pkg set name="@${{ github.repository_owner }}/negus-ethiopic-gregorian"
          npm publish --registry https://npm.pkg.github.com/
          git checkout -- package.json package-lock.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download packaged tarball
        uses: actions/download-artifact@v4
        with:
          name: npm-tarball
          path: dist-artifacts

      - name: Determine release notes file
        id: notes
        run: |
          tag="${GITHUB_REF_NAME}"
          file="release-notes/${tag}.md"
          if [ -f "$file" ]; then
            echo "file=$file" >> "$GITHUB_OUTPUT"
          else
            echo "::warning::No release notes found at $file"
            echo "file=" >> "$GITHUB_OUTPUT"
          fi

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          body_path: ${{ steps.notes.outputs.file }}
          files: dist-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
